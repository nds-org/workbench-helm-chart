name: Smoke Test

on: pull_request

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Run helm lint
        run: |
          helm version
          helm lint

      - name: Create kind cluster
        uses: helm/kind-action@v1.4.0

      - name: Install ip utils
        run: |
          apt-get update
          apt-get install -y iproute2
          ip route get 1.2.3.4 | awk '{print $7}'

      - name: Create namespace + imported Keycloak realm (workbench-dev)
        run: |
          kubectl create namespace workbench
          kubectl create configmap keycloak-realm -n workbench --from-file=realm.json

      - name: Run helm install (localdev)
        run: |
          helm dep up
          helm upgrade --install -n workbench workbench . -f values.localdev.yaml -f values.realmimport.yaml --set nfs-server-provisioner.persistence.storageClass=standard --set mongodb.global.storageClass=standard --set oauth2-proxy.global.storageClass=standard --set keycloak.global.storageClass=standard --set controller.hostAliases[0].ip=$(ip route get 1.2.3.4 | awk '{print $7}') --set controller.hostAliases[0].hostnames[0]=kubernetes.docker.internal --set oauth2-proxy.hostAliases[0].ip=$(ip route get 1.2.3.4 | awk '{print $7}') --set oauth2-proxy.hostAliases[0].hostnames[0]=kubernetes.docker.internal


      - name: Wait for NFS Server to start
        run: |
          kubectl wait pods -n workbench -lapp=nfs-server-provisioner --for condition=Ready --timeout=90s || kubectl describe pod -lapp=nfs-server-provisioner -n workbench && kubectl logs -lapp=nfs-server-provisioner -n workbench
          kubectl get pods -n workbench 

      - name: Wait for Postgres + Keycloak to start
        run: |
          kubectl wait pods -n workbench -lapp.kubernetes.io/component=primary --for condition=Ready --timeout=90s || kubectl describe pods -lapp.kubernetes.io/component=primary -n workbench && kubectl logs -lapp.kubernetes.io/component=primary -n workbench
          kubectl get pods -n workbench
          kubectl wait pods -n workbench -lapp.kubernetes.io/component=keycloak --for condition=Ready --timeout=300s || kubectl describe pods -lapp.kubernetes.io/component=keycloak -n workbench && kubectl logs -lapp.kubernetes.io/component=keycloak -n workbench
          kubectl get pods -n workbench

      - name: Wait for Redis + OAuth2 Proxy to start
        run: |
          kubectl wait pods -n workbench -lapp.kubernetes.io/component=master --for condition=Ready --timeout=90s || kubectl describe pod -lapp.kubernetes.io/component=master -n workbench && kubectl logs -lapp.kubernetes.io/component=master -n workbench
          kubectl get pods -n workbench
          kubectl wait pods -n workbench -lapp.kubernetes.io/component=oauth2-proxy --for condition=Ready --timeout=300s || kubectl describe pod -lapp.kubernetes.io/component=oauth2-proxy -n workbench && kubectl logs -lapp.kubernetes.io/component=oauth2-proxy -n workbench -c wait-for-keycloak && kubectl logs -lapp.kubernetes.io/component=oauth2-proxy -n workbench
          kubectl get pods -n workbench

      - name: Wait for MongoDB + Workbench to start
        run: |
          kubectl wait pods -n workbench -lapp.kubernetes.io/component=mongodb --for condition=Ready --timeout=90s || kubectl describe pod -lapp.kubernetes.io/component=mongodb -n workbench && kubectl logs -lapp.kubernetes.io/component=mongodb -n workbench
          kubectl get pods -n workbench
          kubectl wait pods -n workbench -lapp.kubernetes.io/component=workbench --for condition=Ready --timeout=300s || kubectl describe pod -lapp.kubernetes.io/component=workbench -n workbench && kubectl logs -lapp.kubernetes.io/component=workbench -n workbench -c wait-for-keycloak && kubectl logs -lapp.kubernetes.io/component=workbench -n workbench
          kubectl get pods -n workbench
