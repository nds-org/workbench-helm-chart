name: Smoke Test

on: pull_request

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Fetch helm chart dependencies
        run: |
          helm dep up

      - name: Run helm lint
        run: |
          helm lint

      - name: Create kind cluster
        uses: helm/kind-action@v1.4.0

      - name: Create namespace + imported Keycloak realm (workbench-dev)
        run: |
          kubectl create namespace workbench

      - name: Run helm install (localdev)
        run: |
          helm upgrade --install -n workbench workbench . -f values.localdev.yaml -f values.ci.yaml

      - name: Wait for NFS Server to start
        run: |
          kubectl wait pods -n workbench -lapp=nfs-server-provisioner --for condition=Ready --timeout=90s || kubectl describe pod -lapp=nfs-server-provisioner -n workbench && kubectl logs -lapp=nfs-server-provisioner -n workbench
          kubectl get pods -n workbench 

      - name: Wait for Redis + OAuth2 Proxy to start
        run: |
          kubectl wait pods -n workbench -lapp.kubernetes.io/component=master --for condition=Ready --timeout=90s || kubectl describe pod -lapp.kubernetes.io/component=master -n workbench && kubectl logs -lapp.kubernetes.io/component=master -n workbench
          kubectl get pods -n workbench
          kubectl wait pods -n workbench -lapp.kubernetes.io/component=oauth2-proxy --for condition=Ready --timeout=300s || kubectl describe pod -lapp.kubernetes.io/component=oauth2-proxy -n workbench && kubectl logs -lapp.kubernetes.io/component=oauth2-proxy -n workbench
          kubectl get pods -n workbench

      - name: Wait for MongoDB + Workbench to start
        run: |
          kubectl wait pods -n workbench -lapp.kubernetes.io/component=mongodb --for condition=Ready --timeout=90s || kubectl describe pod -lapp.kubernetes.io/component=mongodb -n workbench && kubectl logs -lapp.kubernetes.io/component=mongodb -n workbench
          kubectl get pods -n workbench
          kubectl wait pods -n workbench -lapp.kubernetes.io/component=workbench --for condition=Ready --timeout=300s || kubectl describe pod -lapp.kubernetes.io/component=workbench -n workbench && kubectl logs -lapp.kubernetes.io/component=workbench -n workbench -c wait-for-oauth2-proxy && kubectl logs -lapp.kubernetes.io/component=workbench -n workbench -c webui && kubectl logs -lapp.kubernetes.io/component=workbench -n workbench -c apiserver
          kubectl get pods -n workbench

      - name: Test Connection: Ingress -> OAuth2 Proxy
        run: |
          kubectl exec -it deploy/workbench -c apiserver -n workbench -- curl --insecure https://workbench-ingress-nginx-controller.workbench.svc.cluster.local/oauth2/auth

      - name: Test Connection: Ingress -> Workbench API
        run: |
          kubectl exec -it deploy/workbench -c apiserver -n workbench -- curl --insecure https://workbench-ingress-nginx-controller.workbench.svc.cluster.local/api/v1/version

      - name: Test Connection: Workbench API -> MongoDB
        run: |
          kubectl exec -it deploy/workbench -c apiserver -n workbench -- curl --insecure https://workbench-ingress-nginx-controller.workbench.svc.cluster.local/api/v1/services

      - name: Test Connection: Ingress -> WebUI
        run: |
          kubectl exec -it deploy/workbench -c apiserver -n workbench -- curl --insecure https://workbench-ingress-nginx-controller.workbench.svc.cluster.local/frontend.json
