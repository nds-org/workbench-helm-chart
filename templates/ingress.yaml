---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-auth
  namespace: {{ .Release.Namespace }}
  annotations:
#    kubernetes.io/ingress.class: "nginx"
{{ if .Values.oauth.enabled | default false }}
    nginx.ingress.kubernetes.io/auth-url: "{{ .Values.oauth.auth_url | default "https://$host/cauth/auth" }}"
    nginx.ingress.kubernetes.io/auth-signin: "{{ .Values.oauth.signin_url | default "https://$host/login/" }}"
    nginx.ingress.kubernetes.io/auth-response-headers: "{{ .Values.oauth.auth_response_headers | default "x-auth-request-user, x-auth-request-email" }}"
{{ else }}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/cauth/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/login/"
{{ end }}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - {{ .Values.workbench.domain }}
    - '*.{{ .Values.workbench.domain }}'
    secretName: {{ .Values.tls.secretName }}
  rules:
{{ if .Values.workbench.subdomain_prefix }}
  - host: {{ .Values.workbench.subdomain_prefix }}.{{ .Values.workbench.domain }}
{{ else }}
  - host: {{ .Values.workbench.domain }}
{{ end }}
    http:
      paths:
      - path: /logs
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port:
              number: 80
      - path: /dashboard
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-open
  namespace: {{ .Release.Namespace }}
  annotations:
#    kubernetes.io/ingress.class: "nginx"
#    nginx.ingress.kubernetes.io/app-root: "/landing/"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - {{ .Values.workbench.domain }}
    - '*.{{ .Values.workbench.domain }}'
    secretName: {{ .Values.tls.secretName }}
  rules:
{{ if .Values.workbench.subdomain_prefix }}
  - host: {{ .Values.workbench.subdomain_prefix }}.{{ .Values.workbench.domain }}
{{ else }}
  - host: {{ .Values.workbench.domain }}
{{ end }}
    http:
      paths:
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 30001
      - path: /login/
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
      - path: /landing/
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
      - path: /cauth/
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
      - path: /shared/
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
      - path: /node_modules/
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
      - path: /asset/
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
      - path: /ConfigModule.js
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
      - path: /swagger.yaml
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
      - path: /env.json
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
#    kubernetes.io/ingress.class: "nginx"
{{ if .Values.certmgr.cluster_issuer }}
    cert-manager.io/cluster-issuer: "{{ .Values.certmgr.cluster_issuer }}"
{{ else if .Values.certmgr.issuer }}
    cert-manager.io/issuer: "{{ .Values.certmgr.issuer }}"
{{ end }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

#    traefik.ingress.kubernetes.io/preserve-host: "true"
#    traefik.ingress.kubernetes.io/redirect-permanent: "true"
#    traefik.ingress.kubernetes.io/redirect-regex: "^https://(.*)"
#    traefik.ingress.kubernetes.io/redirect-replacement: "https://www.$1"

{{ if .Values.workbench.subdomain_prefix }}
    nginx.ingress.kubernetes.io/permanent-redirect: "https://{{ .Values.workbench.subdomain_prefix }}.{{ .Values.workbench.domain }}/landing/"
{{ else }}
    nginx.ingress.kubernetes.io/permanent-redirect: "https://{{ .Values.workbench.domain }}/landing/"
{{ end }}
  name: {{ .Release.Name }}-root
  namespace: {{ .Release.Namespace }}
spec:
  rules:
  - host: {{ .Values.workbench.domain }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
        path: /
        pathType: Prefix
{{ if .Values.workbench.subdomain_prefix }}
  - host: {{ .Values.workbench.subdomain_prefix }}.{{ .Values.workbench.domain }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
        path: /
        pathType: Prefix
{{ end }}
  tls:
  - hosts:
    - {{ .Values.workbench.domain }}
    - '*.{{ .Values.workbench.domain }}'
    secretName: {{ .Values.tls.secretName }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
#    kubernetes.io/ingress.class: "nginx"
#{{ if .Values.certmgr.cluster_issuer }}
#    cert-manager.io/cluster-issuer: "{{ .Values.certmgr.cluster_issuer }}"
#{{ else if .Values.certmgr.issuer }}
#    cert-manager.io/issuer: "{{ .Values.certmgr.issuer }}"
#{{ end }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

    traefik.ingress.kubernetes.io/preserve-host: "true"
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
    traefik.ingress.kubernetes.io/redirect-regex: "^https://(.*)"
    traefik.ingress.kubernetes.io/redirect-replacement: "https://www.$1"

{{ if .Values.workbench.subdomain_prefix }}
    nginx.ingress.kubernetes.io/permanent-redirect: "https://{{ .Values.workbench.subdomain_prefix }}.{{ .Values.workbench.domain }}/landing/"
{{ else }}
    nginx.ingress.kubernetes.io/permanent-redirect: "https://{{ .Values.workbench.domain }}/landing/"
{{ end }}
  name: {{ .Release.Name }}-www-redirect
  namespace: {{ .Release.Namespace }}
spec:
  rules:
  - host: {{ .Values.workbench.domain }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}
            port: 
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - {{ .Values.workbench.domain }}
    - '*.{{ .Values.workbench.domain }}'
    secretName: {{ .Values.tls.secretName }}
