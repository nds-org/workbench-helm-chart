apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
data:

  # Enable TLS (HTTPS)?
  workbench.tls.enable: "true"

  # Cert manager configuration
  workbench.ingress.tls.enable: "true"
  workbench.ingress.tls.cluster_issuer: "{{ default "" .Values.certmgr.cluster_issuer }}"
  workbench.ingress.tls.issuer: "{{ default "" .Values.certmgr.issuer }}"

  # Customize this instance of Workbench
  workbench.subdomain_prefix: "{{ .Values.workbench.subdomain_prefix }}"
  workbench.domain: "{{ .Values.workbench.domain }}"
  workbench.cookie_domain: "{{ .Values.workbench.domain }}"

  workbench.advanced_features.show_config: "{{ .Values.workbench.advanced_features.show_config }}"
  workbench.advanced_features.show_logs: "{{ .Values.workbench.advanced_features.show_logs }}"
  workbench.advanced_features.show_console: "{{ .Values.workbench.advanced_features.show_console }}"
  workbench.advanced_features.show_service_help_icon: "{{ .Values.workbench.advanced_features.show_service_help_icon }}"
  workbench.advanced_features.show_edit_service: "{{ .Values.workbench.advanced_features.show_edit_service }}"
  workbench.advanced_features.show_remove_service: "{{ .Values.workbench.advanced_features.show_remove_service }}"
  workbench.advanced_features.show_create_spec: "{{ .Values.workbench.advanced_features.show_create_spec }}"
  workbench.advanced_features.show_import_spec: "{{ .Values.workbench.advanced_features.show_import_spec }}"
  workbench.advanced_features.show_file_manager: "{{ .Values.workbench.advanced_features.show_file_manager }}"

  workbench.name: "{{ .Values.workbench.name }}"
  workbench.landing_html: >- 
    {{ .Values.workbench.landing_html }}
  workbench.brand_logo_path: {{ .Values.workbench.brand_logo_path | quote }}
  workbench.favicon_path: {{ .Values.workbench.favicon_path | quote }}
  workbench.learn_more_url: {{ .Values.workbench.learn_more_url | quote }}
  workbench.help_links: {{ .Values.workbench.help_links | quote }}

  workbench.support_email: "{{ .Values.workbench.support_email }}"
  workbench.analytics_tracking_id: "{{ .Values.workbench.analytics_tracking_id }}"
  workbench.node_selector_name: "{{ .Values.workbench.node_selector_name }}"
  workbench.node_selector_value: "{{ .Values.workbench.node_selector_value }}"
{{ if .Values.oauth.enabled }}
  workbench.signin_url: "{{ .Values.oauth.signin_url }}"
  workbench.auth_url: "{{ .Values.oauth.auth_url }}"
{{ else }}
  workbench.signin_url: "https://{{ .Values.workbench.subdomain_prefix }}.{{ .Values.workbench.domain }}/login/"
  workbench.auth_url: "https://{{ .Values.workbench.subdomain_prefix }}.{{ .Values.workbench.domain }}/cauth/auth"
{{ end }}
  workbench.home_storage.home_pvc_suffix: "{{ .Values.workbench.home_storage.home_pvc_suffix }}"
  workbench.home_storage.pvc_storage_class: "{{ .Values.workbench.home_storage.pvc_storage_class }}"

{{ if .Values.workbench.shared_storage.enabled }}
  workbench.shared_storage.read_only: "{{ .Values.workbench.shared_storage.read_only }}"
  workbench.shared_storage.volume_name: "{{ .Values.workbench.shared_storage.volume_name }}"
  workbench.shared_storage.volume_path: "{{ .Values.workbench.shared_storage.volume_path }}"
{{ else }}
  workbench.shared_storage.volume_path: "/tmp/shared"
  workbench.shared_storage.read_only: "true"
  workbench.shared_storage.volume_name: "shared"
{{ end }}

  workbench.timeout: "{{ .Values.workbench.timeout }}"
  workbench.inactivity_timeout: "{{ .Values.workbench.inactivity_timeout }}"

  # IP address used by DNS service 
  #workbench.ip: ""

  # Customize your Workbench catalogs
  git.spec_repo: "{{ .Values.workbench.specs.repo }}"
  git.spec_branch: "{{ .Values.workbench.specs.branch }}"

  # To enable account approval, you need to configure the SMTP relay below
  workbench.require_account_approval: "{{ .Values.workbench.require_account_approval }}"

  # If using a local smtp server, use the following. The defaults will only work for NCSA nebula VMs
  smtp.host: "{{ .Values.smtp.host }}"
  smtp.port: "{{ .Values.smtp.port }}"

  # FIXME: this is probably insecure, and should likely be using a secret instead
  # If using gmail as your SMTP service, use the following. If using 2-factor
  # auth see https://support.google.com/accounts/answer/185833?hl=en
  smtp.gmail_user: "{{ .Values.smtp.gmail_user }}"
  smtp.gmail_pass: "{{ .Values.smtp.gmail_pass }}"

  # FIXME: this is probably insecure, and should likely be using a secret instead
  # If using AWS as your SMTP service, use the following
  smtp.aws_ses_user: ""
  smtp.aws_ses_password: ""

  # FIXME: this is probably insecure, and should likely be using a secret instead
  # For all other authenticated SMTP servers, use the following
  smtp.smarthost_address: ""
  smtp.smarthost_port: ""
  smtp.smarthost_user: ""
  smtp.smarthost_password: ""


  # Oauth2
  oauth2.client_id: ""
  oauth2.client_secret: ""
  # output of: openssl rand -hex 9
  oauth2.cookie_secret: ""
  oauth2.cookie_domain: ".{{ .Values.workbench.domain }}"
