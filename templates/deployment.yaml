apiVersion: apps/v1
kind: {{ .Values.controller.kind | default "Deployment" }}
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: {{ .Release.Name }}
{{- with .Values.controller.extraLabels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: 1
  strategy:
    type: {{ .Values.controller.strategy_type | default "RollingUpdate" }}
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/component: {{ .Release.Name }}
{{- with .Values.controller.extraLabels }}
{{ toYaml . | indent 6 }}
{{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/component: {{ .Release.Name }}
{{- with .Values.controller.extraLabels }}
{{ toYaml . | indent 8 }}
{{- end }}
      annotations:
        configHash: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:

# Service Account Name
{{- with .Values.controller.serviceAccount.name }}
      serviceAccountName: {{ .Values.controller.serviceAccount.name }}
{{- else }}
      serviceAccountName: {{ .Release.Name }}
{{- end }}

# HostAliases (optional)
{{- with .Values.controller.hostAliases }}
      hostAliases:
{{ toYaml . | indent 8 }}
{{- end }}

      initContainers:
        - name: wait-for-oauth2-proxy
          image: ghcr.io/groundnuty/k8s-wait-for:v1.6
          imagePullPolicy: Always
          args:
            - "pod"
            - "-lapp.kubernetes.io/component=oauth2-proxy"
{{- if .Values.controller.extraInitContainers }}
{{ toYaml .Values.controller.extraInitContainers | indent 8 }}
{{- end }}

      volumes:
      - name: frontend-config
        configMap:
          name: {{ .Release.Name }}
          items:
          - key: frontend.json
            path: frontend.json
      - name: backend-config
        configMap:
          name: {{ .Release.Name }}
          items:
          - key: backend.json
            path: backend.json
{{- with .Values.controller.extraVolumes }}
{{ toYaml . | indent 6 }}
{{- end }}
      containers:
      - name: webui
        image: {{ required "Must specify an image for controller.images.webui" .Values.controller.images.webui }}
        imagePullPolicy: Always
{{- with .Values.controller.extraEnv.webui }}
        env:
{{ toYaml . | indent 10 }}
{{- end }}
        ports:
        - containerPort: 80
          name: webui
        volumeMounts:
        - name: frontend-config
          mountPath: /usr/share/nginx/html/frontend.json
          subPath: frontend.json
{{- with .Values.controller.extraVolumeMounts.webui }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.resources.webui }}
        resources:
{{ toYaml . | indent 10 }}
{{- end }}

      - name: apiserver
        image: {{ required "Must specify an image for controller.images.apiserver" .Values.controller.images.apiserver }}
        imagePullPolicy: Always
        volumeMounts:
{{- with .Values.controller.extraVolumeMounts.apiserver }}
{{ toYaml . | indent 8 }}
{{- end }}
        - name: frontend-config
          mountPath: /app/env/frontend.json
          subPath: frontend.json
        - name: backend-config
          mountPath: /app/env/backend.json
          subPath: backend.json
        env:
          - name: CONFIG_HASH
            valueFrom:
              fieldRef:
                fieldPath: metadata.annotations['configHash']
{{- with .Values.controller.extraEnv.apiserver }}
{{ toYaml . | indent 10 }}
{{- end }}

        readinessProbe:
          httpGet:
            path: /api/v1/version
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 120
#        livenessProbe:
#          failureThreshold: 3
#          httpGet:
#            path: /api/v1/version
#            port: 5000
#            scheme: HTTP
#          initialDelaySeconds: 5
#          periodSeconds: 5
#          successThreshold: 1
#          timeoutSeconds: 1
        ports:
        - containerPort: 5000
          name: api
        resources:
{{ toYaml .Values.resources.api | indent 10 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}

{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}

{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}

